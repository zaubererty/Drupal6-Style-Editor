<?php
// $Id$
/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
*/

// @todo: use list_theme()

function style_edit_menu() {
    $items['admin/settings/styleedit'] = array(

            'title' => 'Style Editor',
            'description' => 'Edit Style Sheets',
            'page callback' => 'style_edit_overview',
            'access arguments' => array('view style sheets'),
            'type' => MENU_NORMAL_ITEM,
            //'file' => 'annotate.admin.inc',
            );
    $items['admin/settings/styleedit/list'] = array(

            'title' => 'List',
            'page callback' => 'style_edit_overview',
            'access arguments' => array('view style sheets'),
            'type' => MENU_LOCAL_TASK,
            );


    $items['admin/settings/styleedit/%/view'] = array(

            'title' => 'View',
            'page callback' => 'style_edit_theme_view',
            'page arguments' => array(3),
            'access arguments' => array('view style sheets'),
            );

    $items['admin/settings/styleedit/%/import/%/%'] = array(

            'title' => 'Import',
            'page callback' => 'style_edit_theme_import',
            'page arguments' => array(3,5,6),
            'access arguments' => array('import style sheets'),
            );

    $items['admin/settings/styleedit/edit/%'] = array(

            'title' => 'Edit',
            'page callback' => 'style_edit_styleset_edit',
            'page arguments' => array(4),
            'access arguments' => array('edit style sheets'),
            );

    return $items;
}

function style_edit_perm() {
    return array(
        'view style sheets',
        'import style sheets',
        'update style sheets',
        'edit style sheets',
        );
}

function style_edit_settings(){

    $form['list'] = array(
        '#type' => 'textarea',
        '#title' => 'List',
    );
return $form;
}


function style_edit_overview(){
    //dargs();
    dpm(list_themes());
    return build_table(query_style_array('all'));
}

function style_edit_theme_view($theme){
    //dargs();
    return build_table(query_style_array($theme));
}


function query_style_array($theme){
    $type = 'theme';
    if ($theme == 'all'){
        $sql = "SELECT info, name FROM {system} WHERE type = '%s'";
    }
    else {
        $sql = "SELECT info, name FROM {system} WHERE type = '%s' AND name = '%s'";
    }

    $result = db_query($sql,$type,$theme);

    $rows[] = array();

    while ($r = db_fetch_array($result)) {
        $rows[] = $r;
    }
    return $rows;
}

function build_table($rows){
    $header = array(
        array('data' => t('Theme'), 'field' => 'name'),
        array('data' => t('Type'), 'field' => 'style'),
        array('data' => t('Operation'), 'field' => 'op'),
        );

    $table[] = array();
    $info = array();

    foreach ($rows as $value){
        $info = unserialize($value['info']);
        if (count($value)==0) continue;
        foreach ($info['stylesheets'] as $st_key => $st_value){
            foreach ($st_value as $key => $style){
            $table[] = array(
                l($info['name'],'admin/settings/styleedit/' . $value['name'] . '/view'),
                $st_key . ' => ' . $style,
                l(t('import'),'admin/settings/styleedit/' . $value['name'] . '/import/'. $st_key .'/' . $key),
            );
            }
        }
    }

    return theme('table',$header,$table);
}

function style_edit_theme_import($theme,$stylesesction,$stylesheet){
    drupal_add_tabledrag('stylesheet_table', 'order', 'sibling', 'weight-group');
    $header = array(
        array('data' => t('ID'), 'field' => 'id'),
        array('data' => t('Class / Element'), 'field' => 'selector'),
        array('data' => t('CSS'), 'field' => 'style'),
        array('data' => t('Operation'), 'field' => 'op'),
        );


    $rows = query_style_array($theme);
    $info = unserialize($rows[1][info]);
    $styles = get_style_sections_from_file($info['stylesheets'][$stylesesction][$stylesheet]);
    dpm($styles);

    $id = 1;
    foreach ($styles[0] as $key => $style) {
        if ($styles[2][$key] == '') continue;
        $line = split('{', $style);
        $table[] = array(
            $id,
            $line[0],
            str_replace(';', ';<br>',str_replace('}','', $line[1])),
            l(t(edit), 'admin/settings/styleedit/edit/'.$id),
        );
        $id++;

    }
    drupal_set_message(t('Import OK'));
    return theme('table',$header,$table,array('id'=>'stylesheet_table'));
    //return $theme . ' ' . $style . ' ' . $info['stylesheets'][$stylesesction][$stylesheet];
}

function get_style_sections_from_file($file){
    $arrChunks = array();

    //$fs_sy = fopen($info['stylesheets'][$stylesesction][$style]);
    $str_style = file_get_contents($file);
    $str_style = str_replace("\r", '', $str_style);
    $str_style = str_replace('/**/', '[__]', $str_style);
    if (substr($str_style, 0, 2) != '/*'){
	$str_style = "\n" . $str_style;
    }
    preg_match_all('@(/\*.*\*\/)|([^\/}]*{[^}]*})@Us', $str_style, $arrChunks);
    //fclose($fs_sy);
    return $arrChunks;
}

function style_edit_styleset_edit($styleset) {
    $from['sel_cat'] = array(
        '#type' => 'fieldset',
        '#title' => t('Selector and category'),
        '#tree' => TRUE,
        '#collapsible' => TRUE,
        );

    $from['sel_cat']['selector'] = array(
        '#type' => 'textfield',
        '#title' => t('Selector'),
        );

     $from['size_pos'] = array(
        '#type' => 'fieldset',
        '#title' => t('Size and position'),
        '#tree' => TRUE,
        '#collapsible' => TRUE,
        );

    $from['size_pos']['width'] = array(
        '#type' => 'textfield',
        '#title' => t('Width'),
        '#value' => '42',
        '#size' => 10,
        );

    $from['size_pos']['w_mat'] = array(
        '#type' => 'select',
        '#title' => t('Width'),
        '#options' => array(t('Optional'), t('Required')),
        );

    dpm($from);
    return drupal_render($from);
}
?>
