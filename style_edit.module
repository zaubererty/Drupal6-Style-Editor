<?php
// $Id$
/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
*/

require_once 'style_edit_form.inc';

function style_edit_menu() {
    $items['admin/settings/styleedit'] = array(

            'title' => 'Style Editor',
            'description' => 'Edit theme stylesheets',
            'page callback' => 'style_edit_list_filesystem',
            'access arguments' => array('view style sheets'),
            'type' => MENU_NORMAL_ITEM,
            //'file' => 'annotate.admin.inc',
            );
    
    $items['admin/settings/styleedit/list'] = array(

            'title' => 'List',
            'page callback' => 'style_edit_list_filesystem',
            'access arguments' => array('view style sheets'),
            'type' => MENU_DEFAULT_LOCAL_TASK,
            );


    $items['admin/settings/styleedit/editsheet/%'] = array(

            'title' => 'Edit Stylesheet',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('style_edit_stylesheet_edit_form',4),
            'access arguments' => array('edit style sheets'),
            'file' => 'style_edit_form.inc',
            'type' => MENU_LOCAL_TASK,
            );


    $items['admin/settings/styleedit/listtheme/%'] = array(

            'title' => 'View',
            'page callback' => 'style_edit_theme_listtheme',
            'page arguments' => array(4),
            'access arguments' => array('view style sheets'),
            );

    $items['admin/settings/styleedit/import/%/%/%'] = array(

            'title' => 'Import',
            'page callback' => 'style_edit_import_theme',
            'page arguments' => array(4,5,6),
            'access arguments' => array('import style sheets'),
            );

    $items['admin/settings/styleedit/editstyle/%'] = array(

            'title' => 'Edit',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('style_edit_styleset_edit_form',4),
            'access arguments' => array('edit style sheets'),
            'file' => 'style_edit_form.inc',
            );

    return $items;
}

function style_edit_perm() {
    return array(
        'view style sheets',
        'import style sheets',
        'edit style sheets',
        );
}

function style_edit_settings(){

    $form['list'] = array(
        '#type' => 'textarea',
        '#title' => 'List',
    );
return $form;
}


function style_edit_list_filesystem(){
    return build_table(query_style_array());
}

function style_edit_theme_listtheme($theme){
    return build_table(query_style_array($theme));
}

function query_style_array($theme = 'all'){

    foreach (list_themes() as $themesysname => $themedetails) {
        if ($theme == $themesysname or $theme == 'all')
            $rows[] = (array)$themedetails;
    }
    return $rows;
}

function build_table($rows){
    $header = array(
        array('data' => t('Theme'), 'field' => 'name'),
        array('data' => t('Type'), 'field' => 'style'),
        array('data' => t('Operation'), 'field' => 'op'),
        );

    $table[] = array();
    $info = array();

    foreach ($rows as $value){
        foreach ($value['stylesheets'] as $st_key => $st_value){
            foreach ($st_value as $key => $style){
                $action_links = create_action_links($value['name'],$st_key,$key,$style);
                $table[] = array(
                    l($value['info']['name'],'admin/settings/styleedit/listtheme/'.$value['name']),
                    $st_key . ' => ' . $style,
                    $action_links['import'],
                    $action_links['edit']
                );
            }
        }
    }

    return theme('table',$header,$table);
}

function create_action_links($systemname, $media, $filename, $path){

    $links = array();
    $sql = "SELECT cssid FROM {style_edit_cssimport} ".
        "WHERE systemname = '%s' AND path = '%s'";
    $result = db_query($sql,array($systemname,$path));

    if ($result->num_rows > 0){
        $cssid = db_result($result);
        $links['import'] = l(t('reimport'),'admin/settings/styleedit/import/'.
                $systemname.'/'.$media .'/'.$filename);
        $links['edit'] = l(t('edit'),'admin/settings/styleedit/editsheet/'.$cssid);
    }else {
        $links['import'] = l(t('import'),'admin/settings/styleedit/import/'.
                $systemname.'/'.$media .'/'.$filename);
        $links['edit'] = '';
    }
    return $links;
}

function style_edit_import_theme($theme,$stylesesction,$stylesheet){
    drupal_add_tabledrag('stylesheet_table', 'order', 'sibling', 'weight-group');
    $header = array(
        array('data' => t('ID'), 'field' => 'id'),
        array('data' => t('Class / Element'), 'field' => 'selector'),
        array('data' => t('CSS'), 'field' => 'style'),
        array('data' => t('Operation'), 'field' => 'op'),
        );


    $info = query_style_array($theme);
    $cssfilename = $info[0]['stylesheets'][$stylesesction][$stylesheet];
    $styles = get_style_sections_from_file($cssfilename);

    $insertdata = array(
        'name' => $info['info']['name'],
        // TODO: source dynamic
        'source' => 'theme',
        'systemname' => $theme,
        'filename' => $stylesheet,
        'path' => $cssfilename,
        'ufiletimestamp' => 1,
    );

    $sql = "SELECT cssid,ufiletimestamp FROM {style_edit_cssimport} ".
        "WHERE systemname = '%s' AND path = '%s'";
    $result = db_query($sql,array($theme,$cssfilename));
    $cssdbid = 0;

    if ($result->num_rows == 0){
        drupal_write_record('style_edit_cssimport', $insertdata);
        $cssdbid = db_last_insert_id('style_edit_cssimport', 'cssid');
    } else {
        $cssfilerow = db_fetch_array($result);
        $cssdbid = $cssfilerow['cssid'];
        $sql = "DELETE FROM {style_edit_cssstyles} WHERE cssid = %d";
        $result = db_query($sql,$cssdbid);
    }

    $sortval = 1;
    foreach ($styles[0] as $key => $style) {

        if ($styles[2][$key] == '') {
            $kind = 'COMMENT';
            $selector = '';
            $styledb = $style;
        }else {
            $line = split('{', $style);
            $kind = 'STYLE';
            $selector = $line[0];
            $styledb = '{'.$line[1];
        }

        $insertdata = array(
            'kind' => $kind,
            'selector' => $selector,
            'style' => $styledb,
            'weigth' => $sortval,
            'cssid' => $cssdbid,
        );

        // TODO: update statt insert
        if (drupal_write_record('style_edit_cssstyles', $insertdata))
                $styledbid = db_last_insert_id('style_edit_cssstyles', 'styleid');

        $styledb = str_replace('{','', $styledb);
        if ($kind == 'STYLE'){
            $table[] = array(
                $styledbid,
                $selector,
                str_replace(';', ';<br>',str_replace('}','', $styledb)),
                l(t(edit), 'admin/settings/styleedit/edit/'.$styledbid),
            );    
        }
        $sortval++;
    }
    drupal_set_message(t('Import OK'));
    //return theme('table',$header,$table,array('id'=>'stylesheet_table'));

    // TODO: Clean up rendering
    return drupal_get_form('style_edit_stylesheet_edit_form',$cssdbid);
}

function get_style_sections_from_file($file){
    $arrChunks = array();

    $str_style = file_get_contents($file);
    $str_style = str_replace("\r", '', $str_style);
    $str_style = str_replace('/**/', '[__]', $str_style);
    if (substr($str_style, 0, 2) != '/*'){
	$str_style = "\n" . $str_style;
    }
    preg_match_all('@(/\*.*\*\/)|([^\/}]*{[^}]*})@Us', $str_style, $arrChunks);
    return $arrChunks;
}

function style_edit_edit_sheet($cssid) {
    // TODO: implement database listing
    $header = array(
        array('data' => t('ID'), 'field' => 'id'),
        array('data' => t('Class / Element'), 'field' => 'selector'),
        array('data' => t('CSS'), 'field' => 'style'),
        array('data' => t('Operation'), 'field' => 'op'),
        );

    $sql = 'SELECT * FROM {style_edit_cssstyles} WHERE cssid = %d ORDER BY weigth';
    $result = db_query($sql,$cssid);
    $table[] = array();
    while ($r = db_fetch_array($result)) {
        $table[] = array(
          $r['styleid'],
          $r['selector'],
          $r['style'],
          $r['weigth'] . ' / ' . $result->num_rows,
        );
    }
    dpm($table);
    return theme('table',$header,$table,array('id'=>'stylesheet_table'));
}

/**
 *  Load the Stylesheet from the database
 *
 * @param   int     $cssid  ID of the stylesheed to load
 * @return  array           List of items and count field
 */

function style_edit_load_stylesheet_db($cssid){
    $sql = 'SELECT * FROM {style_edit_cssstyles} WHERE cssid = %d ORDER BY weigth';
    $result = db_query($sql,$cssid);
    $table[] = array();
    while ($r = db_fetch_array($result)) {
        $table[] = $r;
    }
    $table['count'] = $result->num_rows;
    return $table;
}

/**
 * Implementation of hook_theme().
 */
function style_edit_theme($existing, $type, $theme, $path) {
    return array(
            'style_edit_stylesheet_edit_form' => array(
                    'arguments' => array('form' => NULL),
            ),
    );
}

function theme_style_edit_stylesheet_edit_form($form){
    drupal_add_tabledrag('css_table', 'order', 'sibling', 'weight-group');

    $header = array(t('Selector'),t('Style'),t('Operation'),'Weight');
    foreach (element_children($form['css']) as $key) {

        $element = &$form['css'][$key];
        $element['weight']['#attributes']['class'] = 'weight-group';
        $element['itemid']['#attributes']['class'] = 'itemid';

        $row = array();
        $row[] = drupal_render($element['selector']);
        $row[] = drupal_render($element['style']);
        $row[] = drupal_render($element['operation']);
        $row[] = drupal_render($element['weight']).
                    drupal_render($element['styleid']);

        //Add a draggable class to every table row (<tr>)
        $rows[] = array('data' => $row, 'class' => 'draggable');
    }

    $output = theme('table', $header, $rows, array('id' => 'css_table'));

    $output .= drupal_render($form);

    return $output;
}

?>
